services:
  # Nginx reverse proxy with SSL
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "4430:4430"
    depends_on:
      - frontend
      - gateway
      - game
      - tournament
      - auth
    networks:
      - transcendence-network

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    expose:
      - "3000"
    volumes:
      - ./frontend:/app
      - /app/dist
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      game:
        condition: service_started
      tournament:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - transcendence-network

  # Gateway service
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    expose:
      - "8000"
    volumes:
      - ./gateway:/app
      - /app/dist
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - AUTH_URL=http://auth:3001
      - TOURNAMENT_URL=http://tournament:8080
      - GAME_URL=http://game:4000
      - AUTH_URL=http://auth:3001
    depends_on:
      auth:
        condition: service_started
    networks:
      - transcendence-network

  # Game service
  game:
    build:
      context: ./game
      dockerfile: Dockerfile
    expose:
      - "4000"
    volumes:
      - ./game:/workspace/game
      - /workspace/game/dist
      - /workspace/game/node_modules

    environment:
      - NODE_ENV=development
      - PORT=4000
      - GATEWAY_URL=http://gateway:8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - transcendence-network

  # Tournament service
  tournament:
    build:
      context: ./tournament
      dockerfile: Dockerfile
    expose:
      - "8080"
    ports:
      - "5555:5555" # for prism
    volumes:
      - ./tournament:/app
      - /app/dist
      - /app/node_modules
      - tournament_data:/app/prisma
    environment:
      - NODE_ENV=development
      - DATABASE_URL=file:/app/prisma/dev.db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - transcendence-network

  # Auth service
  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    expose:
      - "3001"
    ports:
      - "5556:5555"
    volumes:
      - ./auth:/app
      - /app/dist
      - /app/node_modules
      - auth_data:/app/prisma
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    post_start:
      - command: ["npx", "prisma", "migrate", "deploy"]
    environment:
      - NODE_ENV=development
      - DATABASE_URL=file:/app/prisma/dev.db
    networks:
      - transcendence-network
    

volumes:
  tournament_data:
  auth_data:

networks:
  transcendence-network:
    driver: bridge
