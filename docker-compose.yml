services:
  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/dist
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      game:
        condition: service_started
      tournament:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - transcendence-network

  # Game service
  game:
    build:
      context: ./game
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    volumes:
      - ./game:/workspace/game
      - /workspace/game/dist
      - /workspace/game/node_modules

    environment:
      - NODE_ENV=development
      - PORT=4000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - transcendence-network

  # Tournament service
  tournament:
    build:
      context: ./tournament
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "5555:5555" # for prism
    volumes:
      - ./tournament:/app
      - /app/dist
      - /app/node_modules
      - tournament_data:/app/prisma
    environment:
      - NODE_ENV=development
      - DATABASE_URL=file:/app/prisma/dev.db
    command: sh -c "npx prisma generate && npx prisma migrate deploy && npm run dev"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - transcendence-network

volumes:
  tournament_data:

networks:
  transcendence-network:
    driver: bridge
