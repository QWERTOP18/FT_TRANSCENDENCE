openapi: 3.0.3
info:
  title: Tournament API
  version: 1.0.0
servers:
  - url: http://localhost:4010
paths:
  /tournaments:
    post:
      summary: Create a tournament
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tournament'
      responses:
        '200':
          description: Tournament created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
    get:
      summary: Get all tournaments
      responses:
        '200':
          description: List of tournaments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tournament'

  /tournaments/{id}:
    get:
      summary: Get a specific tournament
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          description: Tournament detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'

  /participants:
    post:
      summary: Create a participant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Participant'
      responses:
        '200':
          description: Participant created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participant'

  /matches/{id}/done:
    put:
      summary: Complete a match
      parameters:
        - $ref: '#/components/parameters/IdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatchResult'
      responses:
        '200':
          description: Match updated

components:
  parameters:
    IdParam:
      name: id
      in: path
      required: true
      schema:
        type: integer

  schemas:
    Tournament:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        status:
          type: string
          enum: [reception, open, close]
        num:
          type: integer
        max_num:
          type: integer
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant'
        matches:
          type: array
          items:
            $ref: '#/components/schemas/Match'

    Participant:
      type: object
      properties:
        id:
          type: string
          format: uuid
        tournament_id:
          type: integer
        order:
          type: integer
        name:
          type: string
        external_id:
          type: string

    Match:
      type: object
      properties:
        id:
          type: integer
        tournament_id:
          type: integer
        order:
          type: integer
        type:
          type: string
          enum: [seed, versus]
        status:
          type: string
          enum: [ready, in_progress, done, skip]
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant'
        winners:
          type: array
          items:
            $ref: '#/components/schemas/Participant'
        losers:
          type: array
          items:
            $ref: '#/components/schemas/Participant'
        tie_players:
          type: array
          items:
            $ref: '#/components/schemas/Participant'

    MatchResult:
      type: object
      properties:
        winners:
          type: array
          items:
            type: string
        losers:
          type: array
          items:
            type: string
        tie_players:
          type: array
          items:
            type: string
