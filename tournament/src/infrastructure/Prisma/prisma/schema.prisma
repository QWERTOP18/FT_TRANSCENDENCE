// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // or mysql/sqlite etc.
  url      = env("DATABASE_URL")
}

model Tournament {
  id          String  @id @default(uuid())
  champion_id String?
  name        String
  description String
  max_num     Int
  owner_id    String
  state       State
  rule        TournamentRule

  participants Participant[]
  histories    History[]

  @@map("tournament")
}

model Participant {
  id            String           @id @default(uuid())
  external_id   String
  name          String
  tournament_id String
  state         ParticipantState

  tournament       Tournament @relation(fields: [tournament_id], references: [id])
  winner_histories History[]  @relation("WinnerRelation")
  loser_histories  History[]  @relation("LoserRelation")

  @@map("participant")
}

model History {
  id            String   @id @default(uuid())
  tournament_id String
  winner_id     String
  loser_id      String
  winner_score  Int
  loser_score   Int
  created_at    DateTime @default(now())

  tournament Tournament  @relation(fields: [tournament_id], references: [id])
  winner     Participant @relation("WinnerRelation", fields: [winner_id], references: [id])
  loser      Participant @relation("LoserRelation", fields: [loser_id], references: [id])

  @@map("history")
}

enum State {
  reception
  open
  close
}

enum TournamentRule {
  simple
}

enum ParticipantState {
  pending
  ready
  in_progress
  battled
  eliminated
  champion
}
