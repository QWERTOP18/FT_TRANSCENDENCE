openapi: 3.0.0
info:
  title: トーナメントAPI
  description: >+
    
    トーナメント表を作成するためのAPI

    ### インストール

    準備中。。。

    ```

    docker-compose up -d

    ```

    で起動できるようにする予定。


    ### 使用例

    1. [POST] `tournaments`でトーナメントを作成する。

    1. [POST] `participants`で参加者を追加する。

    1. [POST] `tournaments/:id/open`でトーナメントを開始する。

    1. [PUT] `participants/:id/ready`で参加者をreadyにする。

    1. [PUT] `participants/:id/cancel`で参加者をpendingにする。

    1. [PUT] `participants/:id/battle`で参加者をin_progressにする。

    1. [POST] `history`で対戦結果を保存する。

    1. 参加者が一人になるまで、4, 5, 6を繰り返す。

    1. 一人になると、自動で終了。


    ### 共通エラー

    何かしらのエラーが発生した場合以下のエラーが発生する可能性があります。


    #### パラメータ

    エラーレスポンスでは以下のパラメータを必ず含みます。
     * statusCode : ステータスコード : number
     * code : エラーコード : string
     * error : statusCodeに基づくエラーメッセージ : string
     * message : 詳細なエラーメッセージ : string

    #### レスポンス例

    ```

    {
    	"statusCode":500,
    	"code":"TRT_ERR_NOT_IMPLEMENTED",
    	"error":"Internal Server Error",
    	"message":"This feature is not implemented."
    }

    ```


    #### エラーコード一覧

     > 基本的なエラーコードは [Fastify](https://fastify.dev/docs/v5.3.x/Reference/Errors/) で定義されています。

     以下はこのシステムで更に定義されているものです。

     | コード | 説明 | 解決法 |
     | --- | :---: | :---: |
     | TRT_ERR_NOT_IMPLEMENTED | この機能は実装されていません | 管理者に連絡してください |

    ### ドキュメンテーションパス
     * `/documentation` : このページ
     * `/documentation/json` : このページを生成するための生のopenapi.json
     * `/documentation/yaml` : このページを生成するための生のopenapi.yaml

  version: 0.0.0
components:
  schemas: {}
paths:
  /tournaments:
    get:
      summary: トーナメント一覧取得
      tags:
        - tournament
      description: |
        
        # 概要
        トーナメント一覧を取得します。

        # 注意点
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: OK
                type: array
                items:
                  description: トーナメント
                  type: object
                  properties:
                    id:
                      format: uuid
                      description: トーナメントID
                      type: string
                    champion_id:
                      format: uuid
                      description: 優勝者の参加者ID
                      nullable: true
                      type: string
                    owner_id:
                      format: uuid
                      description: トーナメントのオーナー参加者ID
                      type: string
                    name:
                      description: トーナメント名
                      type: string
                    max_num:
                      description: トーナメントの最大参加人数
                      minimum: 2
                      type: number
                    description:
                      description: トーナメントの説明
                      type: string
                    state:
                      description: "トーナメントの状況 - reception: 受付中, open: 開催中, close: 終了"
                      anyOf:
                        - type: string
                          enum:
                            - reception
                        - type: string
                          enum:
                            - open
                        - type: string
                          enum:
                            - close
                    participants:
                      description: 参加者リスト
                      type: array
                      items:
                        format: uuid
                        description: 参加者ID
                        type: string
                    histories:
                      description: トーナメントの履歴
                      type: array
                      items:
                        format: uuid
                        description: 履歴ID
                        type: string
                  required:
                    - id
                    - champion_id
                    - owner_id
                    - name
                    - max_num
                    - state
                    - participants
                    - histories
    post:
      summary: トーナメント作成
      tags:
        - tournament
      description: |
        
        # 概要
        トーナメントを新規で作成します。

        # 注意点
        * 参加者の追加は別途、**参加者の作成**を行う必要があります。
        * マッチの追加はできません。参加者の数に応じて自動的にマッチが作成されます。＜＝この仕様は要相談。例えばオートマッチ機能を作成する？
      requestBody:
        content:
          application/json:
            schema:
              type: object
              allOf:
                - description: トーナメント
                  type: object
                  properties:
                    name:
                      description: トーナメント名
                      type: string
                    description:
                      description: トーナメントの説明
                      type: string
                    max_num:
                      description: トーナメントの最大参加人数
                      minimum: 2
                      type: number
                  required:
                    - name
                    - max_num
                - type: object
                  properties:
                    ownerExternalId:
                      description: トーナメントのオーナーの外部ID
                      type: string
                  required:
                    - ownerExternalId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: OK
                type: object
                properties:
                  id:
                    format: uuid
                    description: トーナメントID
                    type: string
                  champion_id:
                    format: uuid
                    description: 優勝者の参加者ID
                    nullable: true
                    type: string
                  owner_id:
                    format: uuid
                    description: トーナメントのオーナー参加者ID
                    type: string
                  name:
                    description: トーナメント名
                    type: string
                  max_num:
                    description: トーナメントの最大参加人数
                    minimum: 2
                    type: number
                  description:
                    description: トーナメントの説明
                    type: string
                  state:
                    description: "トーナメントの状況 - reception: 受付中, open: 開催中, close: 終了"
                    anyOf:
                      - type: string
                        enum:
                          - reception
                      - type: string
                        enum:
                          - open
                      - type: string
                        enum:
                          - close
                  participants:
                    description: 参加者リスト
                    type: array
                    items:
                      format: uuid
                      description: 参加者ID
                      type: string
                  histories:
                    description: トーナメントの履歴
                    type: array
                    items:
                      format: uuid
                      description: 履歴ID
                      type: string
                required:
                  - id
                  - champion_id
                  - owner_id
                  - name
                  - max_num
                  - state
                  - participants
                  - histories
  /tournaments/{id}:
    get:
      summary: トーナメント取得
      tags:
        - tournament
      description: |
        
        # 概要
        :idで指定されたトーナメントを取得します。

        # 注意点
      parameters:
        - schema:
            format: uuid
            type: string
          in: path
          name: id
          required: true
          description: トーナメントID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: OK
                type: object
                properties:
                  id:
                    format: uuid
                    description: トーナメントID
                    type: string
                  champion_id:
                    format: uuid
                    description: 優勝者の参加者ID
                    nullable: true
                    type: string
                  owner_id:
                    format: uuid
                    description: トーナメントのオーナー参加者ID
                    type: string
                  name:
                    description: トーナメント名
                    type: string
                  max_num:
                    description: トーナメントの最大参加人数
                    minimum: 2
                    type: number
                  description:
                    description: トーナメントの説明
                    type: string
                  state:
                    description: "トーナメントの状況 - reception: 受付中, open: 開催中, close: 終了"
                    anyOf:
                      - type: string
                        enum:
                          - reception
                      - type: string
                        enum:
                          - open
                      - type: string
                        enum:
                          - close
                  participants:
                    description: 参加者リスト
                    type: array
                    items:
                      format: uuid
                      description: 参加者ID
                      type: string
                  histories:
                    description: トーナメントの履歴
                    type: array
                    items:
                      format: uuid
                      description: 履歴ID
                      type: string
                required:
                  - id
                  - champion_id
                  - owner_id
                  - name
                  - max_num
                  - state
                  - participants
                  - histories
        "404":
          description: 見つからなかった
          content:
            application/json:
              schema:
                description: 見つからなかった
                type: object
                properties:
                  code:
                    description: エラーコード
                    type: string
                  statusCode:
                    description: ステータスコード
                    type: number
                  error:
                    description: エラー概要
                    type: string
                  message:
                    description: エラーメッセージ
                    type: string
                required:
                  - code
                  - statusCode
                  - error
                  - message
  /tournaments/{id}/open:
    put:
      summary: トーナメントを開始する
      tags:
        - tournament
      description: |
        
        # 概要
        トーナメントを開始します。
        stateをreceptionからopenに変更します。
        # 注意点
        * このトーナメントへの参加者が作成できなくなります。
      parameters:
        - schema:
            format: uuid
            type: string
          in: path
          name: id
          required: true
          description: トーナメントID
        - schema:
            type: string
          in: header
          name: X-External-Id
          required: true
          description: 外部ID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: OK
                type: object
                properties:
                  ok:
                    type: boolean
                    enum:
                      - true
                required:
                  - ok
  /tournaments/{id}/participants:
    get:
      summary: トーナメントの参加者を取得する
      tags:
        - tournament
      description: |
        
        # 概要
        トーナメントの参加者を取得します。

        # 注意点
      parameters:
        - schema:
            format: uuid
            type: string
          in: path
          name: id
          required: true
          description: トーナメントID
      responses:
        "200":
          description: トーナメント参加者
          content:
            application/json:
              schema:
                description: トーナメント参加者
                type: array
                items:
                  description: 参加者
                  type: object
                  properties:
                    id:
                      format: uuid
                      description: 参加者ID
                      type: string
                    tournament_id:
                      format: uuid
                      description: トーナメント ID
                      type: string
                    external_id:
                      description: 外部ID - トーナメントユーザーと外部のユーザー情報の紐付け用
                      type: string
                    state:
                      description: "参加者の状態 - pending: 参加待ち, ready: 準備完了, in_progress: 対戦中, battled:
                        対戦済み, eliminated: 敗退, champion: 優勝"
                      anyOf:
                        - type: string
                          enum:
                            - pending
                        - type: string
                          enum:
                            - ready
                        - type: string
                          enum:
                            - in_progress
                        - type: string
                          enum:
                            - battled
                        - type: string
                          enum:
                            - eliminated
                        - type: string
                          enum:
                            - champion
                  required:
                    - id
                    - tournament_id
                    - external_id
                    - state
    post:
      summary: 参加者作成
      tags:
        - participant
      description: |
        
        # 概要
        参加者を作成します。

        # 注意点
         * トーナメントがreceptionの時のみ、参加者を作成できます。
      requestBody:
        content:
          application/json:
            schema:
              description: 参加者
              type: object
              properties:
                external_id:
                  description: 外部ID - トーナメントユーザーと外部のユーザー情報の紐付け用
                  type: string
              required:
                - external_id
        required: true
        description: 参加者
      parameters:
        - schema:
            type: string
          in: path
          name: id
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: OK
                type: object
                properties:
                  id:
                    format: uuid
                    description: 参加者ID
                    type: string
                  tournament_id:
                    format: uuid
                    description: トーナメント ID
                    type: string
                  external_id:
                    description: 外部ID - トーナメントユーザーと外部のユーザー情報の紐付け用
                    type: string
                  state:
                    description: "参加者の状態 - pending: 参加待ち, ready: 準備完了, in_progress: 対戦中, battled:
                      対戦済み, eliminated: 敗退, champion: 優勝"
                    anyOf:
                      - type: string
                        enum:
                          - pending
                      - type: string
                        enum:
                          - ready
                      - type: string
                        enum:
                          - in_progress
                      - type: string
                        enum:
                          - battled
                      - type: string
                        enum:
                          - eliminated
                      - type: string
                        enum:
                          - champion
                required:
                  - id
                  - tournament_id
                  - external_id
                  - state
  /tournaments/{id}/histories:
    get:
      summary: トーナメントの対戦結果を取得する
      tags:
        - tournament
      description: |
        
        # 概要
        トーナメントの対戦結果を取得します。

        # 注意点
      parameters:
        - schema:
            format: uuid
            type: string
          in: path
          name: id
          required: true
          description: トーナメントID
      responses:
        "200":
          description: トーナメントの対戦結果
          content:
            application/json:
              schema:
                description: トーナメントの対戦結果
                type: array
                items:
                  description: トーナメントの履歴
                  type: object
                  properties:
                    id:
                      format: uuid
                      description: 履歴ID
                      type: string
                    tournament_id:
                      format: uuid
                      description: トーナメント ID
                      type: string
                    winner:
                      type: object
                      properties:
                        id:
                          format: uuid
                          description: 勝者の参加者ID
                          type: string
                        score:
                          minimum: 0
                          description: スコア
                          type: number
                      required:
                        - id
                        - score
                    loser:
                      type: object
                      properties:
                        id:
                          format: uuid
                          description: 敗者の参加者ID
                          type: string
                        score:
                          minimum: 0
                          description: スコア
                          type: number
                      required:
                        - id
                        - score
                    created_at:
                      description: 履歴の作成日時
                      format: date-time
                      type: string
                  required:
                    - id
                    - tournament_id
                    - winner
                    - loser
                    - created_at
    post:
      summary: 対戦結果作成
      tags:
        - histories
      description: |
        
        # 概要
        対戦結果を作成します。
        対戦結果を作成すると、各参加者は以下のステータスになります。

        loserのstateはeliminatedになります。

        winnerのstateは、battledになります。
        ただし、条件によっては、次の表のように変更されます。

        | 条件 | 次のstate |
        | --- | --- |
        | 自分以外の全参加者がeliminatedになった場合 | champion |
        | 全参加者のstateがeliminatedもしくはbattledになった場合 | battledの参加者はpendingになります。 |

        pendingの参加者が奇数の場合はランダムで、一人だけstateがbattledになります。

        また、championが決まった場合は、トーナメントのstateをcloseに変更します。

        # 注意点
         * close状態のトーナメントでは作成できません。
      requestBody:
        content:
          application/json:
            schema:
              description: トーナメントの履歴
              type: object
              properties:
                winner:
                  type: object
                  properties:
                    id:
                      format: uuid
                      description: 勝者の参加者ID
                      type: string
                    score:
                      minimum: 0
                      description: スコア
                      type: number
                  required:
                    - id
                    - score
                loser:
                  type: object
                  properties:
                    id:
                      format: uuid
                      description: 敗者の参加者ID
                      type: string
                    score:
                      minimum: 0
                      description: スコア
                      type: number
                  required:
                    - id
                    - score
              required:
                - winner
                - loser
        required: true
        description: トーナメントの履歴
      parameters:
        - schema:
            type: string
          in: header
          name: X-Mediator-Token
          required: true
          description: 調停者（スーパーユーザ）であることを示すトークン。
        - schema:
            type: string
          in: path
          name: id
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: OK
                type: object
                properties:
                  id:
                    format: uuid
                    description: 履歴ID
                    type: string
                  tournament_id:
                    format: uuid
                    description: トーナメント ID
                    type: string
                  winner:
                    type: object
                    properties:
                      id:
                        format: uuid
                        description: 勝者の参加者ID
                        type: string
                      score:
                        minimum: 0
                        description: スコア
                        type: number
                    required:
                      - id
                      - score
                  loser:
                    type: object
                    properties:
                      id:
                        format: uuid
                        description: 敗者の参加者ID
                        type: string
                      score:
                        minimum: 0
                        description: スコア
                        type: number
                    required:
                      - id
                      - score
                  created_at:
                    description: 履歴の作成日時
                    format: date-time
                    type: string
                required:
                  - id
                  - tournament_id
                  - winner
                  - loser
                  - created_at
  /tournaments/{tournament_id}/participants/{participant_id}/ready:
    put:
      summary: 参加者のステータスをreadyにする
      tags:
        - participant
      description: |
        
        # 概要
        参加者のステータスをreadyにします。

        # 権限
         *

        # 注意点
         * sateがpendingの時のみ可能です。
         * トーナメントがopenの時のみ可能です。
      parameters:
        - schema:
            format: uuid
            type: string
          in: path
          name: participant_id
          required: true
          description: 参加者ID
        - schema:
            format: uuid
            type: string
          in: path
          name: tournament_id
          required: true
          description: ID
        - schema:
            type: string
          in: header
          name: X-External-Id
          required: true
          description: 外部ID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: OK
                type: object
                properties:
                  ok:
                    type: boolean
                    enum:
                      - true
                required:
                  - ok
  /tournaments/{tournament_id}/participants/{participant_id}/cancel:
    put:
      summary: 参加者のステータスをpendingにする
      tags:
        - participant
      description: |
        
        # 概要
        参加者のステータスをpendingにします。

        # 注意点
         * stateがreadyの時のみ可能です。
         * トーナメントがopenの時のみ可能です。
      parameters:
        - schema:
            format: uuid
            type: string
          in: path
          name: participant_id
          required: true
          description: 参加者ID
        - schema:
            format: uuid
            type: string
          in: path
          name: tournament_id
          required: true
          description: ID
        - schema:
            type: string
          in: header
          name: X-External-Id
          required: true
          description: 外部ID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: OK
                type: object
                properties:
                  ok:
                    type: boolean
                    enum:
                      - true
                required:
                  - ok
  /tournaments/{id}/participants/battle:
    put:
      summary: 参加者のステータスをin_progressにする
      tags:
        - participant
      description: |
        
        # 概要
        複数の参加者のステータスをin_progressにします。
        参加者はready状態の2人指定する必要があります。

        # 注意点
         * stateがreadyの時のみ可能です。
         * トーナメントがopenの時のみ可能です。
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                format: uuid
                description: 参加者ID
                type: string
      parameters:
        - schema:
            format: uuid
            type: string
          in: path
          name: id
          required: true
          description: ID
        - schema:
            type: string
          in: header
          name: X-Mediator-Token
          required: true
          description: 調停者（スーパーユーザ）であることを示すトークン。
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: OK
                type: object
                properties:
                  ok:
                    type: boolean
                    enum:
                      - true
                required:
                  - ok
tags:
  - name: tournament
    description: トーナメントに関するAPI
  - name: histories
    description: 対戦結果に関するAPI
  - name: participant
    description: 参加者に関するAPI
